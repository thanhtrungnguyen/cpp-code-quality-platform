volumes:
  cpp_code_quality_platform_local_postgres_data: {}
  cpp_code_quality_platform_local_postgres_data_backups: {}
  node_modules: {} # Add volume for preserving node_modules
  # cpp_code_quality_platform_local_redis_data: {}

services:
  nextjs: &nextjs
    build:
      context: .
      dockerfile: ./compose/local/nextjs/Dockerfile
    image: cpp_code_quality_platform_local_nextjs
    container_name: cpp_code_quality_platform_local_nextjs
    depends_on:
      - postgres
      # - redis
    volumes:
      - .:/app:z
      - node_modules:/app/node_modules # Mount node_modules as volume
    env_file:
      - ./.envs/.local/.nextjs
      - ./.envs/.local/.postgres
    # environment:
    #   - NODE_ENV=development
    #   - NEXT_TURBO=true
    #   - SPOTLIGHT_ENABLED=true
    ports:
      - '3000:3000'
      - '8969:8969' # For Next.js Turbo Pack
      - '9000:9000' # For Spotlight sidecar
    command: /start
    # # For browser testing compatibility
    # cap_add:
    #   - SYS_ADMIN
    # Let the container use its default command from Dockerfile
  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: cpp_code_quality_platform_production_postgres
    container_name: cpp_code_quality_platform_local_postgres
    volumes:
      - cpp_code_quality_platform_local_postgres_data:/var/lib/postgresql/data
      - cpp_code_quality_platform_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - '5432:5432'

  # redis:
  #   image: docker.io/redis:6
  #   container_name: cpp_code_quality_platform_local_redis

  #   volumes:
  #     - cpp_code_quality_platform_local_redis_data:/data
